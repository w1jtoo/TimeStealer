[gd_scene load_steps=23 format=2]

[ext_resource path="res://Game/HealthBar.gd" type="Script" id=1]
[ext_resource path="res://Resources/wizard spritesheet calciumtrice.png" type="Texture" id=2]
[ext_resource path="res://Game/Menu/PauseMenu/PauseMenuScene.tscn" type="PackedScene" id=3]
[ext_resource path="res://Resources/spells/leaf-jade-3.png" type="Texture" id=4]
[ext_resource path="res://Resources/spells/ice-blue-3.png" type="Texture" id=5]
[ext_resource path="res://Resources/spells/runes-orange-3.png" type="Texture" id=6]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

enum {
	Male,
	Female
}

enum {
	MOVE,
	ATTACK,
	CAST
}

export var getting_dmg_cooldown = 50
var state = MOVE
var max_time = 100
var time_health = 100

const ACCELERATION = 500*24/2
const MAX_SPEED = 1200*2
const FRICTION = 1200*64

var velocity = Vector2.ZERO
var sex = Male
var previousTextureId = 0

var attack_cooldown_time = 1050
var next_attack_time = 0
var attack_damage = 30

var damaged_timer = 0
var isDead = false
var wasDead = false

enum {
	NONE,
	ICE_SHARDS,
	TIME_AREA,
	SHIELD
}

var spellInstances = [preload(\"res://Game/World/IceArrow.tscn\"),
	preload(\"res://Game/World/TimeStealingArea.tscn\"),
	preload(\"res://Game/World/Shield.tscn\")]

var isInMenu = false
var items = []

onready var spellTextures = [$Node2D/Panel2/TextureRect/Panel,
 $\"Node2D/Panel2/TextureRect/ice-blue-3\",
 $\"Node2D/Panel2/TextureRect/leaf-jade-3\",
 $\"Node2D/Panel2/TextureRect/runes-orange-3\"]

var currentSpell = NONE setget set_spell

		
func set_spell(value):
	currentSpell = value
	emit_signal(\"spell_changed\", currentSpell)

onready var animationPlayer = $AnimationPlayerMale

onready var animationPlayerMale = $AnimationPlayerMale
onready var animationPlayerFemale = $AnimationPlayerFemale

onready var textureRect = $TextureRect

onready var femaleTextures = [$TextureRect/idle_female, $TextureRect/moving_female,
	$TextureRect/attack_female, $TextureRect/deflect_female, $TextureRect/death_female]
onready var maleTextures = [$TextureRect/idle_male, $TextureRect/moving_male,
	$TextureRect/attack_male, $TextureRect/deflect_male, $TextureRect/death_male]
var textures = []

# var paused: = false setget set_paused

# onready var scene_tree: = get_tree()
# onready var pause_overlay = get_node(\"\")

# func set_paused(value: bool) -> void: 
#	pass


signal damaged(value, max_value)
signal spell_changed(type)

var oldVelocity = Vector2.RIGHT

func _ready():
	if sex == Male:
		textures = maleTextures
		animationPlayer = animationPlayerMale 
	else:
		textures = femaleTextures
		animationPlayer = animationPlayerFemale
	textures[previousTextureId].show()

func _unhandled_input(event) -> void:
	if event.is_action_pressed(\"ui_cancel\"):
		if isInMenu:
			$UserInterface/PauseMenuScene.rev_background_fade_in()
		else:
			$UserInterface/PauseMenuScene.show()
			$UserInterface/PauseMenuScene.background_fade_in()
		get_tree().set_input_as_handled()


func _process(delta):
	var dir = oldVelocity.normalized()
	if len(textures) > previousTextureId && dir.x != 0:
		textures[previousTextureId].flip_h = dir.x < 0
	# there is crutch, delete it!  
	if isInMenu:
		return
	if time_health > max_time:
		time_health = max_time
	if time_health < 0:
		time_health = 0
		
	if damaged_timer > 0:
		textureRect.modulate = Color(170/255.0,0,0,1.0)
		damaged_timer -= 1
	else:
		textureRect.modulate = Color(1.0, 1.0, 1.0, 1.0)
	
	if time_health <=0:
		if isDead and not wasDead:
			showTexture(4)
			animationPlayer.play(\"death\")
			wasDead = true
		return
		
	oldVelocity = (get_viewport().get_mouse_position()-get_viewport().size/2 - Vector2.UP*32).normalized()
	var input_vector = Vector2.ZERO
	input_vector.x = Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\")
	input_vector.y = Input.get_action_strength(\"ui_down\") - Input.get_action_strength(\"ui_up\")
	input_vector = input_vector.normalized()
	if input_vector != Vector2.ZERO:
		velocity = velocity.move_toward(input_vector * MAX_SPEED, ACCELERATION * delta)
	else:
		velocity = velocity.move_toward(input_vector, ACCELERATION * delta)
	
	velocity = move_and_slide(velocity)
	
	match state:
		MOVE:
			move_state(delta)
		
		ATTACK:
			attack_state(delta)
		
		CAST:
			attack_state(delta)

func attack_state(delta):
	showTexture(2)
	animationPlayer.play(\"attack\")
	

func attack_animation_finished():
	match state:
		ATTACK:
			$HandShapeAttack.force_raycast_update()
			var now = OS.get_ticks_msec()
			if now >= next_attack_time:
				if $HandShapeAttack.is_colliding():
					next_attack_time = now + attack_cooldown_time
					var target = $HandShapeAttack.get_collider()
					target.hit(attack_damage)
					consume_time(-attack_damage)
					
				if len(textures) > previousTextureId && velocity.x != 0:
					textures[previousTextureId].flip_h = velocity.x < 0
		CAST:
			var now = OS.get_ticks_msec()
			if now >= next_attack_time:
				var dir = oldVelocity.normalized()
				if currentSpell != NONE:
					next_attack_time = now + attack_cooldown_time
					createSpell(dir)
					consume_time(attack_damage/5)
					
				if len(textures) > previousTextureId && velocity.x != 0:
					textures[previousTextureId].flip_h = velocity.x < 0
				
	state = MOVE

func move_state(delta):
	consume_time(velocity.length()/MAX_SPEED/5)
	var input_vector = Vector2.ZERO
	input_vector.x = Input.get_action_strength(\"ui_right\") - Input.get_action_strength(\"ui_left\")
	input_vector.y = Input.get_action_strength(\"ui_down\") - Input.get_action_strength(\"ui_up\")
	input_vector = input_vector.normalized()
	
	if input_vector != Vector2.ZERO:
		velocity = velocity.move_toward(input_vector * MAX_SPEED, ACCELERATION * delta)
	else:
		if velocity != Vector2.ZERO:
			oldVelocity = velocity
		velocity = velocity.move_toward(input_vector, ACCELERATION * delta)
	
	velocity = move_and_slide(velocity)
	
	if len(textures) > previousTextureId && velocity.x != 0:
		textures[previousTextureId].flip_h = velocity.x < 0
	
	if velocity != Vector2.ZERO:
		animationPlayer.play(\"move\")
		showTexture(1)
	else:
		animationPlayer.play(\"idle\")
		showTexture(0)
	
	if velocity != Vector2.ZERO:
		$HandShapeAttack.cast_to = velocity.normalized() * 6
	
	if Input.is_action_just_pressed(\"cast_spell\"):
		state = CAST
	if Input.is_action_just_pressed(\"attack\"):
		state = ATTACK


func showTexture(textureId):
	if textureId != previousTextureId:
		var textures = maleTextures if sex == Male else femaleTextures
		textures[previousTextureId].hide()
		textures[textureId].show()
		previousTextureId = textureId


func consume_time(value):
	time_health -= value
	emit_signal(\"damaged\",time_health, max_time)
	if time_health <= 0:
		dead()

func hit(damage):
	# print('got hit: ', damage)
	if time_health > 0 and damaged_timer == 0:
		time_health -= damage
		emit_signal(\"damaged\",time_health, max_time)
		damaged_timer = getting_dmg_cooldown
		# print('Player got damage: ', damage)
		if time_health <= 0:
			dead()
	
	# animation of taking damage


func dead():
	isDead = true

func createSpell(dir):
	match currentSpell:
		ICE_SHARDS:
			var shards = spellInstances[0].instance()
			shards.position = position+dir*16+Vector2.UP*160
			shards.velocity = dir*MAX_SPEED*2
			shards.caster = self
			consume_time(10)
			self.get_parent().add_child(shards)
		TIME_AREA:
			var area = spellInstances[1].instance()
			area.position = position+dir*16+Vector2.UP*160
			area.caster = self
			consume_time(20)
			self.get_parent().add_child(area)
		SHIELD:
			var shield = spellInstances[2].instance()
			shield.position = position+dir*16+Vector2.UP*160
			shield.caster = self
			shield.rotation = -dir.angle_to(Vector2.RIGHT)
			consume_time(10)
			self.get_parent().add_child(shield)
	


func _on_item_entered(body):
	if body.get_name().begins_with(\"Item\"):
		items.append(body)
		body.get_parent().remove_child(body)


func _on_PauseMenuScene_background_fade_finish():
	if isInMenu: 
		isInMenu = false
		$UserInterface/PauseMenuScene.hide()
# 		get_tree().paused = false
	else:
		isInMenu = true
# 		get_tree().paused = true
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 6.88224, 1.5 )

[sub_resource type="Animation" id=3]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/attack_female:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.6 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "attack_animation_finished"
} ]
}

[sub_resource type="Animation" id=4]
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/death_female:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}

[sub_resource type="Animation" id=5]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/deflect_female:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}

[sub_resource type="Animation" id=6]
length = 1.973
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/idle_female:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}

[sub_resource type="Animation" id=7]
resource_name = "move"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/moving_female:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}

[sub_resource type="Animation" id=8]
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/attack_male:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.6 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "attack_animation_finished"
} ]
}

[sub_resource type="Animation" id=9]
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/death_male:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}

[sub_resource type="Animation" id=10]
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/deflect_male:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}

[sub_resource type="Animation" id=11]
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/idle_male:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}

[sub_resource type="Animation" id=12]
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("TextureRect/moving_male:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]
}

[sub_resource type="CircleShape2D" id=13]
radius = 9.05539

[sub_resource type="StyleBoxFlat" id=14]
bg_color = Color( 0, 0.486275, 1, 1 )

[sub_resource type="StyleBoxFlat" id=15]
bg_color = Color( 0, 0, 0, 1 )

[sub_resource type="StyleBoxFlat" id=16]
bg_color = Color( 0.301961, 0.301961, 0.301961, 1 )

[node name="Player" type="KinematicBody2D"]
scale = Vector2( 4, 4 )
collision_layer = 2
collision_mask = 21
script = SubResource( 1 )

[node name="Camera2D" type="Camera2D" parent="."]
scale = Vector2( 0.25, 0.25 )
current = true
zoom = Vector2( 8, 8 )

[node name="UserInterface" type="CanvasLayer" parent="."]
layer = 100

[node name="PauseMenuScene" parent="UserInterface" instance=ExtResource( 3 )]
visible = false

[node name="TextureRect" type="TextureRect" parent="."]
margin_left = -15.4737
margin_top = -26.2631
margin_right = 16.5263
margin_bottom = 5.73686
__meta__ = {
"_edit_use_anchors_": false
}

[node name="idle_female" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
hframes = 10
frame = 5
region_enabled = true
region_rect = Rect2( -1, 160, 320, 32 )

[node name="moving_female" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
flip_h = true
hframes = 10
region_enabled = true
region_rect = Rect2( -1, 224, 320, 32 )

[node name="attack_female" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
hframes = 10
frame = 8
region_enabled = true
region_rect = Rect2( -1, 256, 320, 32 )

[node name="deflect_female" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
hframes = 10
frame = 9
region_enabled = true
region_rect = Rect2( -1, 192, 320, 32 )

[node name="death_female" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
hframes = 10
region_enabled = true
region_rect = Rect2( -1, 288, 320, 32 )

[node name="idle_male" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
hframes = 10
region_enabled = true
region_rect = Rect2( -1, 0, 320, 32 )

[node name="moving_male" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
flip_h = true
hframes = 10
region_enabled = true
region_rect = Rect2( -1, 64, 320, 32 )

[node name="attack_male" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
hframes = 10
frame = 8
region_enabled = true
region_rect = Rect2( -1, 96, 320, 32 )

[node name="deflect_male" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
hframes = 10
region_enabled = true
region_rect = Rect2( -1, 32, 320, 32 )

[node name="death_male" type="Sprite" parent="TextureRect"]
visible = false
position = Vector2( 16, 16 )
texture = ExtResource( 2 )
hframes = 10
region_enabled = true
region_rect = Rect2( -1, 128, 320, 32 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0.263153, -3.8147e-06 )
shape = SubResource( 2 )

[node name="AnimationPlayerFemale" type="AnimationPlayer" parent="."]
autoplay = "idle"
anims/attack = SubResource( 3 )
anims/death = SubResource( 4 )
anims/deflect = SubResource( 5 )
anims/idle = SubResource( 6 )
anims/move = SubResource( 7 )

[node name="AnimationPlayerMale" type="AnimationPlayer" parent="."]
autoplay = "idle"
anims/attack = SubResource( 8 )
anims/death = SubResource( 9 )
anims/deflect = SubResource( 10 )
anims/idle = SubResource( 11 )
anims/move = SubResource( 12 )

[node name="HandShapeAttack" type="RayCast2D" parent="."]
scale = Vector2( 3, 3 )
enabled = true
cast_to = Vector2( 0, 6 )
collision_mask = 24
collide_with_areas = true

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 13 )

[node name="Node2D" type="Node2D" parent="."]
scale = Vector2( 0.25, 0.25 )
script = ExtResource( 1 )

[node name="Panel" type="Panel" parent="Node2D"]
margin_left = -44.0
margin_top = -126.0
margin_right = 44.0
margin_bottom = -108.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ProgressBar" type="ProgressBar" parent="Node2D"]
margin_left = -42.0
margin_top = -124.0
margin_right = 42.0
margin_bottom = -110.0
custom_styles/fg = SubResource( 14 )
custom_styles/bg = SubResource( 15 )
value = 100.0
percent_visible = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel2" type="Panel" parent="Node2D"]
margin_left = 44.0
margin_top = -126.0
margin_right = 62.0
margin_bottom = -108.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="Node2D/Panel2"]
margin_left = 2.0
margin_top = 2.0
margin_right = 16.0
margin_bottom = 16.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="Node2D/Panel2/TextureRect"]
margin_right = 14.0
margin_bottom = 14.0
custom_styles/panel = SubResource( 16 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ice-blue-3" type="Sprite" parent="Node2D/Panel2/TextureRect"]
visible = false
position = Vector2( 7, 7 )
scale = Vector2( 0.06, 0.06 )
texture = ExtResource( 5 )

[node name="leaf-jade-3" type="Sprite" parent="Node2D/Panel2/TextureRect"]
visible = false
position = Vector2( 7, 7 )
scale = Vector2( 0.06, 0.06 )
texture = ExtResource( 4 )

[node name="runes-orange-3" type="Sprite" parent="Node2D/Panel2/TextureRect"]
visible = false
position = Vector2( 7, 7 )
scale = Vector2( 0.06, 0.06 )
texture = ExtResource( 6 )
[connection signal="damaged" from="." to="Node2D" method="_on_Player_damaged"]
[connection signal="spell_changed" from="." to="Node2D" method="_on_Player_spell_changed"]
[connection signal="background_fade_finish" from="UserInterface/PauseMenuScene" to="." method="_on_PauseMenuScene_background_fade_finish"]
[connection signal="body_entered" from="Area2D" to="." method="_on_item_entered"]
